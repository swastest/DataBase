plugins {
    id 'java-library'
    id "io.qameta.allure" version "2.9.6"
}

repositories {
    mavenCentral()
}
def selenideVersion = "6.3.5",
    junitVersion = "5.8.2",
    slfVersion = "1.7.36",
    fakerVersion = "1.0.2",
    allureVersion = "2.17.3",
    restAssuredVersion = "4.5.1",
    lombokVersion = "1.18.10",
    postgreVersion = "42.1.4",
    springJDBCVersion = "5.3.20"


allure {
    report {
        version.set(allureVersion)
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set(allureVersion)
            }
        }
    }
}

dependencies {
    testImplementation(
            "com.codeborne:selenide:$selenideVersion",
            "io.qameta.allure:allure-selenide:$allureVersion",
            "org.junit.jupiter:junit-jupiter:$junitVersion",
            "com.github.javafaker:javafaker:$fakerVersion",
            "org.slf4j:slf4j-simple:$slfVersion",
            "io.rest-assured:rest-assured:$restAssuredVersion",
            "org.projectlombok:lombok:$lombokVersion",
            "org.postgresql:postgresql:$postgreVersion",  //для подключения БД postgresql
            "org.springframework:spring-jdbc:$springJDBCVersion",  // для работы с БД всеми
            'org.aeonbits.owner:owner:1.0.4'
    )
}

test {
    useJUnitPlatform()
}


compileTestJava {
    options.encoding = 'UTF-8'
}

tasks.withType(Test) {
    systemProperties(System.getProperties())

    useJUnitPlatform()


    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

task file(type: Test) {
    useJUnitPlatform {
        includeTags "file"
    }
}
task apiScheduleController(type: Test) {
    useJUnitPlatform {
        includeTags "apiScheduleController"
    }
}